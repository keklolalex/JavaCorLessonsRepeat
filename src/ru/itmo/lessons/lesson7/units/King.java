package ru.itmo.lessons.lesson7.units;

import ru.itmo.lessons.lesson7.base.Unit;

//класс king насладует от класса Unit
//класс King расширяет класс Unit
//класс King дочерний класс
//класс Unit родительский класс (или суперкласс)
//множественное наследование классов запрещено (именно классов)
public class King extends Unit{

    private int gold = 500;


    //конструкторы не наследуются
    public King(int heathScore){
        super(heathScore); //вызов конструктора родителя, с параметром можно или без
    }

    //сможем узнать сколько золото у короля
    public int getGold(){
        return gold;
    }

    //переопределение метода родителя или интерфейса
    //модификатор можно изменить в сторону расширения, все остально одинаково
    @Override //необязательная аннототация времени компиляции
    //аннотация - метаданные к свойствам конструктам или методам
    public void rest(){
        if (gold < 10) return;
        gold -= 10;
        //можно вызвать метод родителя и его использовать или модицифровать его дописать
        super.rest(); //выполняет все функции метода rest класса Unit
        //метод родителя вызывается по желанию разработчика

        System.out.println("King восстанавливает силы");

    }
    //в классе осуществлен перегруз методов
    //одинаковые названия но разное кол-во аргументов или их типов

    //final метод нельзя переопределить в дочернем классе
    //
    public final void rest (Unit unit){ //можно передать и Unit и King либо от другого типа данные
        if (gold < 20) return;
        gold -= 20;
        plusHealth(2);
        unit.plusHealth(1);
        System.out.println("King и Unit восстанавливаю силы");
        }
    }


    //перегруз метода

}
